"""
№113652. Получить из 1 число N
Определить можно ли с использованием только операций «прибавить 3» и «прибавить 5» получить из числа 1 число N (N - натуральное, не превышает 200). Разумеется, само число 1 получить можно, просто не применяя никаких операций.

Входные данные
Вводится число N.

Выходные данные
Выведите слово YES, если число N можно получить из числа 1, или NO - в противном случае.

Примеры
Входные данные
1
Выходные данные
YES
Входные данные
3
Выходные данные
NO
"""

# Рекурсивная функция для проверки можно ли получить N
def can_reach_n(current, target):
    # Базовый случай 1
    if current == target:
        return True # Получилось нужное число
    if current > target:
        return False # Перешагнуло

    # Рекурсивный шаг: два варианта - прибавить 3 и прибавить 5
    can_reach_add3 = can_reach_n(current + 3, target) # проверка, можно ли получить N, прибавив 3
    can_reach_add5 = can_reach_n(current + 5, target) # проверка, можно ли получить N, прибавив 5

    return can_reach_add3 or can_reach_add5 # После того как завершатся рекурсивные вызовы возвращается True или False


test_cases_n = [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14] #  Тестовые случаи
for n_test in test_cases_n:  # Перебор всех тестовых случаев
    # Начинается всегда с 1
    if can_reach_n(1, n_test): # Вызов рекурсивной функции
        print(f"Для N = {n_test}: YES") # YES - если можно получить N
    else:
        print(f"Для N = {n_test}: NO")  # NO  - если нельзя получить N



"""
№113653. Наибольшая цифра
Дана строка, содержащая только десятичные цифры. Найти и вывести наибольшую цифру.

Входные данные
Вводится строка ненулевой длины. Известно также, что длина строки не превышает 1000 знаков и строка содержит только десятичные цифры.

Выходные данные
Выведите максимальную цифру, которая встречается во введенной строке.

Примеры
Входные данные
11111111
Выходные данные
1
"""

# Рекурсивная функция для поиска наибольшей цифры в строке
def find_max_digit(s):
    if len(s) == 1:
        return int(s[0]) # Базовый случай: строка из одной цифры — возвращаем её как максимум
    else:
        # Рекурсивный шаг: наибольшая цифра в оставшейся части строки
        max_in_rest = find_max_digit(s[1:])
        first_digit = int(s[0]) # Первая цифра строки
        return max(first_digit, max_in_rest) # Возвращение наибольшей цифры через max()

test_strings_max = ["11111111", "12345", "9876543210", "5", "28374"] # Тестовые строки
for s_test in test_strings_max: # Перебор всех тестовых случаев
    max_digit = find_max_digit(s_test) # Вызов рекурсивной функции
    print(f"В строке '{s_test}': максимальная цифра = {max_digit}") # Вывод наибольшей цифры


"""
№113654. Количество цифр
Дана строка, содержащая цифры и английские буквы (большие и маленькие). Найти и вывести количество цифр.

Входные данные
Вводится строка ненулевой длины. Известно также, что длина строки не превышает 1000 знаков.

Выходные данные
Выведите количество цифр, которые присутствуют в строке.

Примеры
Входные данные
74kz31n8pn26f2iv10c7u8x356gl73jlka67i929z08i5mnn35h0n
Выходные данные
28
"""

# Рекурсивная функция для подсчёта количества цифр в строке
def count_digits(s):
    if not s:
        return 0  # Базовый случай: строка пуста — цифр нет
    else:
        count_in_rest = count_digits(s[1:])  # Рекурсивный шаг: количество цифр в оставшейся части строки
        first_char = s[0]  # Первый символ строки
        if first_char.isdigit():
            return 1 + count_in_rest  # Если первый символ — цифра, то счётчик увеличивается на 1
        else:
            return count_in_rest  # Если не цифра — просто возвращается количество цифр в оставшейся части

test_strings_count = [
    "74kz31n8pn26f2iv10c7u8x356gl73jlka67i929z08i5mnn35h0n",
    "NoDigitsHere",
    "12345abc",
    "JustLetters",
    "0",
    "",
] # Тестовые строки
for s_test in test_strings_count: # Перебор всех тестовых случаев
    digit_count = count_digits(s_test) # Вызов рекурсивной функции
    print(f"В строке '{s_test}': количество цифр = {digit_count}") # Вывод количества цифр